

aws-connect-platform/
│
├── environments/                        # Separate state and config per environment
│   ├── dev/
│   │   ├── backend.tf                   # Remote backend (S3 + DynamoDB)
│   │   ├── main.tf                      # Calls all required modules
│   │   ├── providers.tf                 # AWS provider configuration
│   │   ├── terraform.tfvars             # Environment-specific values
│   │   └── variables.tf
│   ├── test/
│   │   ├── backend.tf
│   │   ├── main.tf
│   │   ├── providers.tf
│   │   ├── terraform.tfvars
│   │   └── variables.tf
│   └── prod/
│       ├── backend.tf
│       ├── main.tf
│       ├── providers.tf
│       ├── terraform.tfvars
│       └── variables.tf
│
├── modules/                             # Reusable Terraform modules
│   ├── connect/
│   │   ├── main.tf
│   │   ├── outputs.tf
│   │   ├── variables.tf
│   │   └── flows/
│   │       └── default_contact_flow.json
│   ├── vpc/
│   ├── iam/
│   │   └── policies/
│   ├── kms/
│   ├── s3/
│   ├── dynamodb/
│   ├── lambda/
│   │   └── lambda_function/
│   │       ├── handler.py
│   ├── api_gateway/
│   ├── sns/
│   └── cloudwatch/
│       └── dashboards/
│           └── connect-dashboard.json
│
├── ansible/                             # Post-Terraform configuration
│   ├── playbooks/
│   │   └── configure_connect.yml        # Upload flows, assign users, etc.
│   ├── roles/
│   │   └── connect_config/
│   │       └── tasks/
│   │           └── main.yml
│   └── group_vars/
│       └── all.yml                      # Global vars like region, instance ID
│
├── cicd/                                # CI/CD Pipelines
│   ├── bitbucket-pipelines.yml          # Full environment-aware pipeline
│
├── scripts/                             # Automation scripts
│   ├── deploy.sh                        # Called from pipeline per env
│   ├── plan.sh                          # Used for previewing changes
│   └── post_apply_ansible.sh            # Optional manual runner
│
│
└── JIRA-TRACEABILITY.md                 # Maps Jira ↔ PR ↔ Confluence traceability




 **Module / Folder**                | **Purpose**                                                                                                                               |
 =======================================================================================================================

 `environments/`                    | Contains separate infrastructure configs (`main.tf`, `tfvars`) per environment (dev, test, prod). Enables isolated deployments and state. |
 `environments/dev/`                | Environment-specific Terraform for development/testing deployments.                                                                       |
 `environments/test/`               | Intermediate testing or QA environment before production.                                                                                 |
 `environments/prod/`               | Secure and approved production deployment configurations.                                                                                 |

 `modules/`                         | Reusable Terraform modules organized by AWS service. Central to Infra-as-Code.                                                            |
 `modules/connect/`                 | Provisions Amazon Connect instance, contact flows, queues, and hours of operation.                                                        |
 `modules/vpc/`                     | (Optional) Creates VPC, subnets, NAT for private Lambda/API connectivity.                                                                 |
 `modules/iam/`                     | Manages IAM roles and custom policies for Connect, Lambda, API Gateway, etc.                                                              |
 `modules/iam/policies/`            | Stores JSON policy documents to be used with IAM module.                                                                                  |
 `modules/kms/`                     | Creates KMS keys for encryption (S3, DynamoDB, logs).                                                                                     |
 `modules/s3/`                      | Provisions S3 buckets for call recordings, logs, reports with encryption and lifecycle policies.                                          |
 `modules/dynamodb/`                | Defines tables for storing Connect session metadata or lookup configs.                                                                    |
 `modules/lambda/`                  | Creates Lambda functions used in contact flows or Connect integrations.                                                                   |
 `modules/lambda/lambda_function/`  | Stores Lambda function source code (`handler.py`, etc.).                                                                                  |
 `modules/api_gateway/`             | Creates API Gateway for exposing Lambda functionality externally.                                                                         |
 `modules/sns/`                     | Configures SNS topics for notification or alerting workflows.                                                                             |
 `modules/cloudwatch/`              | Defines monitoring, log groups, alarms for Connect, Lambda, and metrics.                                                                  |
 `modules/cloudwatch/dashboards/`   | JSON dashboards for CloudWatch to visualize service metrics.                                                                              |

 `ansible/`                         | Ansible automation for post-Terraform configuration (flows, user setup).                                                                  |
 `ansible/playbooks/`               | Main playbooks to execute (`configure_connect.yml`, etc.).                                                                                |
 `ansible/roles/`                   | Role-based automation logic for modular Ansible execution.                                                                                |
 `ansible/group_vars/`              | Global variables shared across roles/playbooks.                                                                                           |

 `cicd/`                            | CI/CD pipeline definitions and reusable templates.                                                                                        |
 `cicd/bitbucket-pipelines.yml`     | Main Bitbucket pipeline with multi-env deployments and security scans.                                                                    |

 `scripts/`                         | Shell scripts used by CI/CD pipeline (`deploy.sh`, `plan.sh`, etc.).                                                                      |

 `JIRA-TRACEABILITY.md`             | Maps the Jira → PR → Pipeline → Confluence integration strategy.                                                                          |

