


aws-connect-platform/
│
├── environments/                       # Env-specific overrides + entrypoints
│   ├── dev/
│   │   ├── backend.tf                  # Remote backend (S3/DynamoDB)
│   │   ├── main.tf                     # Module composition for dev
│   │   ├── providers.tf                # Provider config
│   │   ├── terraform.tfvars            # Dev variables
│   │   └── variables.tf
│   ├── nonprod/
│   │   ├── backend.tf
│   │   ├── main.tf
│   │   ├── providers.tf
│   │   ├── terraform.tfvars
│   │   └── variables.tf
│   └── prod/
│       ├── backend.tf
│       ├── main.tf
│       ├── providers.tf
│       ├── terraform.tfvars
│       └── variables.tf
│
├── modules/                            # All reusable, parameterized modules
│   ├── connect/
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   ├── outputs.tf
│   │   └── flows/
│   │       └── default_contact_flow.json
│
│   ├── vpc/                            # Optional if Lambdas need private subnets
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   └── outputs.tf
│
│   ├── iam/                            # IAM roles and policies
│   │   ├── main.tf
│   │   ├── policies/
│   │   │   └── connect_lambda_policy.json
│   │   ├── variables.tf
│   │   └── outputs.tf
│
│   ├── kms/                            # Encryption keys for S3/DynamoDB
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   └── outputs.tf
│
│   ├── s3/                             # Recording and logging buckets
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   └── outputs.tf
│
│   ├── dynamodb/                       # Call session metadata
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   └── outputs.tf
│
│   ├── lambda/                         # For dynamic routing and integrations
│   │   ├── main.tf
│   │   ├── lambda_function/
│   │   │   └── handler.py              # OR lambda.zip if precompiled
│   │   ├── variables.tf
│   │   └── outputs.tf
│
│   ├── api_gateway/                    # Optional external API integrations
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   └── outputs.tf
│
│   ├── sns/                            # Alerting and notification topics
│   │   ├── main.tf
│   │   ├── variables.tf
│   │   └── outputs.tf
│
│   └── cloudwatch/                     # Dashboards and alarms
│       ├── main.tf
│       ├── dashboards/
│       │   └── connect-dashboard.json
│       ├── variables.tf
│       └── outputs.tf
│
├── shared/                             # Shared global config (optional)
│   ├── locals.tf                       # Tags, naming conventions, regions
│   └── tags.tf
│
├── scripts/                            # Optional: automation hooks
│   ├── pre_validation.sh
│   ├── post_apply_ansible.sh
│   └── upload_connect_flows.sh
│
├── cicd/                               # CI/CD pipeline definitions
│   ├── github-actions.yml
│   └── bitbucket-pipelines.yml
│
├── .terraform.lock.hcl
├── .gitignore
├── README.md
└── terragrunt.hcl                     # Optional if using Terragrunt for DRY env mgmt




Module / Folder         | Purpose                                                                                                                                             |
 --------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------- |
 
 `environments/`             | Environment-specific Terraform configurations for `dev`, `nonprod`, and `prod`. Each contains its own backend, provider, and `main.tf` to call modules. |
 `environments/dev/`         | Dev-specific variables and resources — isolated state for safe testing.                                                                                 |
 `environments/nonprod/`     | Pre-production environment used for staging and QA.                                                                                                     |
 `environments/prod/`        | Production deployment — uses hardened configs and stricter security.                                                                                    |
 
 `modules/`                  | Collection of reusable Terraform modules used by all environments.                                                                                      |
 `modules/connect/`          | Creates and configures Amazon Connect instance, contact flows, queues, hours of operation.                                                              |
 `modules/lambda/`           | Deploys Lambda functions to support contact flows (e.g., routing logic, data lookup).                                                                   |
 `modules/vpc/`              | Optional — used if Lambdas or API Gateway need private subnet access. Creates VPC, subnets, NAT Gateway, and route tables.                              |
 `modules/iam/`              | Manages IAM roles, policies, and permissions for Amazon Connect, Lambda, API Gateway, etc.                                                              |
 `modules/kms/`              | Creates KMS keys for encryption of S3 buckets, DynamoDB, and other secure services.                                                                     |
 `modules/s3/`               | Provisions S3 buckets for call recordings, logs, and reports with versioning and encryption.                                                            |
 `modules/dynamodb/`         | Creates DynamoDB tables to store call session metadata or routing data.                                                                                 |
 `modules/api_gateway/`      | Optional — sets up REST APIs for integrating Connect with external/internal systems.                                                                    |
 `modules/sns/`              | Creates SNS topics for alerting, notifications, or operational messaging.                                                                               |
 `modules/cloudwatch/`       | Configures CloudWatch alarms, log groups, and dashboards for Connect and Lambda.                                                                        |
 
 `shared/`                   | Contains global/shared Terraform configs like tags, locals, naming standards.                                                                           |
 
 `scripts/`                  | Bash scripts for pre-validation, uploading contact flows, and post-deploy Ansible hooks.                                                                |
 
 `cicd/`                     | Stores CI/CD pipeline definitions (`github-actions.yml`, `bitbucket-pipelines.yml`) for automated deployment.                                           |
 
 `terragrunt.hcl` (optional) | Terragrunt support for DRY modular reuse and centralized env management (if used).                                                                      |
 `.gitignore`                | Git ignore rules to exclude Terraform local state, secrets, and build files.                                                                            |
 `README.md`                 | Documentation for infrastructure setup, modules, and deployment process.                                                                                |


